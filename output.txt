let <KEYWORD>
add <IDENTIFIER>
n <IDENTIFIER>
= <OPERATOR>
radd <IDENTIFIER>
0 <INTEGER>
n <IDENTIFIER>
where <KEYWORD>
rec <KEYWORD>
radd <IDENTIFIER>
r <IDENTIFIER>
n <IDENTIFIER>
= <OPERATOR>
n <IDENTIFIER>
eq <KEYWORD>
0 <INTEGER>
-> <OPERATOR>
r <IDENTIFIER>
| <OPERATOR>
radd <IDENTIFIER>
( (
r <IDENTIFIER>
+ <OPERATOR>
n <IDENTIFIER>
) )
in <KEYWORD>
print <IDENTIFIER>
( (
add <IDENTIFIER>
2 <INTEGER>
3 <INTEGER>
4 <INTEGER>
0 <INTEGER>
) )
